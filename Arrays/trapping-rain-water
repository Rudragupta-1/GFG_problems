

class Solution{
    
    // arr: input array
    // n: size of array
    // Function to find the trapped water between the blocks.
    static long trappingWater(int arr[], int n) { 
        int left[]=new int[n];
        int right[]=new int[n];
        int max=arr[0];
        left[0]=arr[0];
        int max1=arr[n-1];
        long water=0;
        right[n-1]=arr[n-1];
        
        for(int i=1;i<n;i++)
        {
            max=Math.max(max,arr[i]);
            left[i]=max;
        }
        for(int i=n-2;i>=0;i--)
        {
            max1=Math.max(max1,arr[i]);
            right[i]=max1;
        }
        for(int i=0;i<n;i++)
        {
            int min=Math.min(left[i],right[i]);
            water+=min-arr[i];
        }
        return water;
    } 
}
