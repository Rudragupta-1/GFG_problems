/*class Node
{
    int data;
    Node left, right;

    Node(int item)
    {
        data = item;
        left = right = null;
    }
}*/


class Level_Order_Traverse
{
    //Function to return the level order traversal line by line of a tree.
    static ArrayList<ArrayList<Integer>> levelOrder(Node root) 
    {
        ArrayList<ArrayList<Integer>> ll=new ArrayList<>();
        ArrayList<Integer> list=new ArrayList<>();
        Queue<Node> q=new LinkedList<>();
        if(root==null)
        return null;
        q.offer(root);
        q.offer(null);
        while(!q.isEmpty()){
            Node x=q.poll();
            if(x!=null)
            {
                list.add(x.data);
                 if(x.left!=null)
                {
                    q.offer(x.left);
                }
                if(x.right!=null)
                {
                    q.offer(x.right);
                }
               
            }
            else{
                ll.add(new ArrayList<>(list));
                list.clear();
                if(!q.isEmpty())
                {
                    q.offer(null);
                }
            }
        }
        return ll;
    }
}
