/*Complete The Function Provided
Given Below is The Node Of Tree
class Node
{
    int data;
    Node left, right;
    public Node(int data)
    {
        this.data = data;
         left = right = null;
    }
}*/


class Solution{
    //Function to return list containing elements of right view of binary tree.
    ArrayList<Integer> rightView(Node node) {
        //add code here.
        ArrayList<Integer> lq=new ArrayList<>(); 
      ArrayList<Integer> la=new ArrayList<>();
      Queue<Node> q=new LinkedList<>();
      
      if(node==null)
      return la;
      
      q.offer(node);
    //   la.add(root.data);
      
      while(!q.isEmpty()){
        int size=q.size();
        while(size-->0)
        {
            Node x=q.poll();
            lq.add(x.data);
            if(x.left!=null)
            {
                q.offer(x.left);
            }
            if(x.right!=null){
                q.offer(x.right);
            }
            
        }
        la.add(lq.get(lq.size()-1));
        lq.clear();
      }
      return la;
    }
}

